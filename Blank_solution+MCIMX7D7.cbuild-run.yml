cbuild-run:
  generated-by: csolution version 2.8.0
  solution: Blank_solution.csolution.yml
  target-type: MCIMX7D7
  compiler: AC6
  device: NXP::MCIMX7D7
  device-pack: Keil::iMX7D_DFP@1.7.8
  board: NXP::MCIMX7D-SABRE:Rev B
  board-pack: Keil::iMX7D_DFP@1.7.8
  system-descriptions:
    - file: ${CMSIS_PACK_ROOT}/Keil/iMX7D_DFP/1.7.8/SVD/MCIMX7D7_M4.svd
      type: svd
      pname: Cortex-M4
  output:
    - file: out/Cortex-M4/MCIMX7D7/Debug/Cortex-M4.axf
      info: generate by Cortex-M4.Debug+MCIMX7D7
      type: elf
    - file: out/Cortex-M4/MCIMX7D7/Debug/Cortex-M4.hex
      info: generate by Cortex-M4.Debug+MCIMX7D7
      type: hex
  system-resources:
    memory:
      - name: IROM1
        start: 0x00000000
        size: 0x00008000
        default: true
        startup: true
        pname: Cortex-M4
        from-pack: Keil::iMX7D_DFP@1.7.8
      - name: IRAM1
        start: 0x20000000
        size: 0x00008000
        default: true
        pname: Cortex-M4
        from-pack: Keil::iMX7D_DFP@1.7.8
      - name: IRAM2
        start: 0x1FFF0000
        size: 0x00008000
        pname: Cortex-M4
        from-pack: Keil::iMX7D_DFP@1.7.8
  debugger:
    - name: <default>
      port: swd
      clock: 10000000
      dbgconf: Cortex-M4/RTE/Device/MCIMX7D7_Cortex-M4/iMX7D_M4.dbgconf
  debug-vars:
    vars: |
      __var ReleaseM4 = 0x00000001;   // Enable & Release Cortex-M4 from Reset
  debug-sequences:
    - name: DebugCoreStart
      blocks:
        - execute: |
            __var DHCSR_Addr = 0xE000EDF0;
            __var A7_AHB_CSW = 0x43000002;
            __var value = 0;
        - info: Debugger releases M4 from reset during target connection.
          if: __ap == 4 && ReleaseM4
          execute: |
            __ap = 0;                        // Switch to System AHB AP (M4 AP not usable yet)

            WriteAP(0x4,  0x00000000);       // Init Cortex-A7 AP

            // Program an infinite loop so the M4 has something to execute after reset
            Write32(0x00180000, 0x20000000);
            Write32(0x00180004, 0x00000009);
            Write32(0x00180008, 0xE7FEE7FE);

            // SRC: Enable M4
            WriteAP(0x00, A7_AHB_CSW);       // CSW
            WriteAP(0x04, 0x3039000C);       // TAR
            value = ReadAP(0x0C);            // DRW

            value &= ~0x00000001;        // Deassert Non-Self-Clearing M4 Reset
            value     |=  0x00000058;        // Mask WDOG3 RST, Enable M4

            WriteAP(0x00, A7_AHB_CSW);       // CSW
            WriteAP(0x04, 0x3039000C);       // TAR
            WriteAP(0x0C, value);            // DRW
            __ap = 4;                        // Switch back to Cortex-M4 AP
        - execute: |
            // Enable Core Debug via DHCSR
            Write32(DHCSR_Addr, 0xA05F0001);
      pname: Cortex-M4
    - name: ResetSystem
      blocks:
        - execute: |
            __var value = 0x00000000;

            // Write SRC_M4RCR[SW_M4P_RST|SW_M4C_RST] (Self-Clearing M4 Core + Platform Reset)
            value  = Read32(0x3039000C);
            value |= 0x00000006;
            Write32(0x3039000C, value);
        - info: Wait for Self-Clearing M4 Core + Platform Reset to finish
          while: Read32(0x3039000C) & 0x00000006
          timeout: 1000000
      pname: Cortex-M4
